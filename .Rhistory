# pkgs
pacman::p_load(tidyverse, polite, scales, ggimage, ggforce,
rvest, glue, extrafont, ggrepel, magick)
install.packages("pacman")
loadfonts()
install.packages("extrafont")
install.packages("magick")
install.packages("polite")
install.packages("devtools")
devtools::install_github("dmi3kno/polite")
if (logo_position == "top right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "top left") {
x_pos = 0.01 * plot_width
y_pos = 0.01 * plot_height
} else if (logo_position == "bottom right") {
x_pos = plot_width - logo_width - 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
} else if (logo_position == "bottom left") {
x_pos = 0.01 * plot_width
y_pos = plot_height - logo_height - 0.01 * plot_height
}
url <- "https://us.soccerway.com/national/england/premier-league/20182019/regular-season/r48730/"
clear
source('~/Documents/AP/APMISC/epl_goal_contribution_matrix_18-19.r', echo=TRUE)
View(team_links_df)
team_links
team_links %>% enframe(name = NULL)
ls = list(name="Smith", age=22)
ls
rm(ls)
v = c(1:3)
cat(v, "\n\n")
rm(v)
ls = list("a", 2.2)
cat(ls)
ls
ls[3] = as.integer(3)
ls
ls[[3]]
ls[3]
ls[3] = list(3, 4)
ls[4] = list(3, 4)
ls[4] = list(as.integer(3, 4)
)
ls
ls[4] = list(as.integer(3), as.integer(4))
ls[[4]] = list(as.integer(3), as.integer(4))
ls
clear all
team_links %>% enframe(name = NULL)
team_links
package?tibble
team_links %>% enframe(name = NULL) %>% separate(value, c(NA, NA, NA, "team_name", "team_num"), sep = "/")
View(session)
session::handle
session.handle
session:handle
session$handle
session
session$config
session$url
session$back
session$html
scrape(session)
scrape(session) %>% html_nodes("#page_team_1_block_team_squad_3-table .name.large-link")
scrape(session) %>% html_nodes("#page_team_1_block_team_squad_3-table .name.large-link") %>% html_text()
player_name_info(session = session)
player_name <- player_name_info(session = session)
session <- bow(url)
player_name <- player_name_info(session = session)
setwd("~/Documents/AP/APMISC/soccer_analysis")
source("test.R", echo = TRUE)
html_dump %>% content()
install.packages("httr")
install.packages("httr")
html_dump %>% content()
source("test.R", echo = TRUE)
html_dump %>% content()
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
html_dump
cat(html_dump)
View(html_dump)
xml_attrs(xml_child(xml_child(html_dump, 1), 1))
capture.output(xml_attrs(xml_child(xml_child(html_dump, 1), 1)))
cat(xml_attrs(xml_child(xml_child(html_dump, 1), 1)))
xml_attrs(xml_child(xml_child(html_dump, 1), 2))
cat(xml_attrs(xml_child(xml_child(html_dump, 1), 2)))
xml_child(html_dump)
cat(xml_child(html_dump))
print(xml_child(html_dump))
source("test.R", echo = TRUE)
team_links
print(team_links)
a <- team_links
a
a
a
a
source("test.R", echo = TRUE)
team_links
team_links <- scrape(session) %>%
html_nodes("#page_competition_1_block_competition_tables_7_block_competition_league_table_1_table .large-link a")
View(team_links)
typeof(team_links)
typeof(team_links[1])
typeof(team_links[2])
typeof(team_links[[2]])
typeof(team_links[[1]])
team_links
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
View(understat)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
xmlToList(html_dump)
html_dump %<>% as("character")
html_dump %>% as("character")
saveXML(html_dump)
View(html_dump)
devtools::install_github("hrbrmstr/htmltidy")
remotes::install_github('hrbrmstr/htmltidy')
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
team_links_c
devtools::install_github("hrbrmstr/htmltidy")
devtools::load_all()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("hrbrmstr/htmltidy")
options(buildtools.check = function(action) TRUE )
devtools::install_github("hrbrmstr/htmltidy")
devtools::install_github("hrbrmstr/htmltidy")
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
View(session)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
source("test.R", echo = TRUE)
devtools::install_github("wch/harbor")
devtools::install_github("hrbrmstr/splashr")
source("test.R", echo = TRUE)
install.packages("knitr")
pl_match_data_1_to_27_seasons_card_per_match_analysis <- readRDS("/Users/ap/Documents/AP/APMISC/soccer_analysis/PL/rds/card_per_match/pl_match_data_1_to_27_seasons_card_per_match_analysis.rds")
library(knitr)
pl_match_data_1_to_27_seasons_card_per_match_analysis %>% kable()
library(magrittr)
pl_match_data_1_to_27_seasons_card_per_match_analysis %>% kable()
pl_match_data_1_to_27_seasons_card_per_match_analysis %>% kable() %>% writeLines("./htmlTable.html")
pl_match_data_1_to_27_seasons_card_per_match_analysis %>% kable(format = "html") %>% writeLines("./htmlTable.html")
source <- read_html("https://www.fotmob.com/?date=20190730&")
source <- rvest::read_html("https://www.fotmob.com/?date=20190730&")
source <- xml2::read_html("https://www.fotmob.com/?date=20190730&")
View(source)
source <- xml2::read_html("https://www.fotmob.com/livescores/3064775")
View(source)
source <- XML::read_html("https://www.fotmob.com/livescores/3064775")
xml2::read_html("https://www.fotmob.com/livescores/3064775")
View(source)
xml2::read_html("https://www.fotmob.com/livescores/3064775") %>% cat()
xml2::read_html("https://www.fotmob.com/livescores/3064775")
source <- xml2::read_html("https://www.fotmob.com/livescores/3064775")
View(source)
xml_child(source, 1)
library(xml2, rvest)
xml_child(source, 1)
xml_child(source, 2)
xml_child(source, 2)[2]
xml_child(source, 2)
source <- xml2::read_html("https://www.fotmob.com/?date=20190730&")
xml_child(source, 2)
xml_child(source, 1)
xml_child(source, 2)
view(xml_child(source, 2))
View(source)
View(xml_child(source, 2))
xml_child(xml_child(source, 2), 2)
xml_child(xml_child(source, 2), 3)
View(xml_child(xml_child(source, 2), 2)
)
match_data <- source %>% html_nodes("script")
library(mmagrittr)
library(magrittr)
match_data <- source %>% html_nodes("script")
library(rvest)
match_data <- source %>% html_nodes("script")
View(match_data)
match_data <- source %>% html_nodes("script") %>%
as.character() %>% str_subset("window.__INITIAL_STATE__")
match_data <- source %>% html_nodes("script") %>%
as.character() %>% stringr::str_subset("window.__INITIAL_STATE__")
print(match_data)
print(match_data) %>% urltools::url_decode()
print(match_data) %>% urltools::url_decode() %>% View()
match_data %>% urltools::url_decode() %>% View()
setwd("~/Documents/AP/APCOLLEGE/Academics/Graduate_School/Research/MultiAgent_NeuralNets")
source("L_hashing.R")
source("L_hashing.R")
NCmisc::list.functions.in.file("L_hashing.R")
source("L_hashing.R")
source("L_hashing.R")
source("L_hashing.R")
